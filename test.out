LP> :load test.lp
Getting value Nat for Global "Nat"
Getting value Nat for Global "Nat"
APP  xx_ <--- L {region = SourceRegion "test.lp" (line 6, column 31), contents = Free_ (Local 0)}  
  0 <--- L {region = SourceRegion "test.lp" (line 6, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 6, column 33), contents = Ann_ (L {region = SourceRegion "test.lp" (line 6, column 33), contents = Zero_}) (L {region = SourceRegion "test.lp" (line 6, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 6, column 33), contents = Nat_})})})}  
  xx_ 0
APP  xx_ <--- L {region = SourceRegion "test.lp" (line 6, column 38), contents = Free_ (Local 0)}  
  S( 0 ) <--- L {region = SourceRegion "test.lp" (line 6, column 40), contents = Inf_ (L {region = SourceRegion "test.lp" (line 6, column 40), contents = Ann_ (L {region = SourceRegion "test.lp" (line 6, column 40), contents = Succ_ (L {region = SourceRegion "test.lp" (line 6, column 40), contents = Zero_})}) (L {region = SourceRegion "test.lp" (line 6, column 40), contents = Inf_ (L {region = SourceRegion "test.lp" (line 6, column 40), contents = Nat_})})})}  
  xx_ S( 0 )
Getting value Nat for Global "Nat"
Getting value \ n . S( n ) for Global "Succ"
EvalHead n lookup to local3_
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 28), contents = Free_ (Global "Succ")}  
  local3_ <--- L {region = SourceRegion "test.lp" (line 7, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 33), contents = Free_ (Local 3)})}  
  S( local3_ )
Getting value \ n . S( n ) for Global "Succ"
EvalHead n lookup to local3_
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 28), contents = Free_ (Global "Succ")}  
  local3_ <--- L {region = SourceRegion "test.lp" (line 7, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 33), contents = Free_ (Local 3)})}  
  S( local3_ )
APP  xx_ <--- L {region = SourceRegion "test.lp" (line 7, column 25), contents = Free_ (Local 0)}  
  S( local3_ ) <--- L {region = SourceRegion "test.lp" (line 7, column 27), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 28), contents = L {region = SourceRegion "test.lp" (line 7, column 28), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 33), contents = Free_ (Local 3)})}})}  
  xx_ S( local3_ )
Getting value \ n . S( n ) for Global "Succ"
EvalHead n lookup to local3_
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")}  
  local3_ <--- L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Free_ (Local 3)})}  
  S( local3_ )
Getting value \ n . S( n ) for Global "Succ"
Getting value \ n . S( n ) for Global "Succ"
EvalHead n lookup to local3_
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")}  
  local3_ <--- L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Free_ (Local 3)})}  
  S( local3_ )
EvalHead n lookup to S( local3_ )
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 42), contents = Free_ (Global "Succ")}  
  S( local3_ ) <--- L {region = SourceRegion "test.lp" (line 7, column 47), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 48), contents = L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Free_ (Local 3)})}})}  
  S( S( local3_ ) )
Getting value \ n . S( n ) for Global "Succ"
Getting value \ n . S( n ) for Global "Succ"
Getting value \ n . S( n ) for Global "Succ"
Getting value Nat for Global "Nat"
Lookup ii4 i 0 as Nat -> Set
  env: WholeEnv {valueEnv = [], typeEnv = [(3,Nat),(2,N (Var xx_6 Only) [A (Succ Zero)]),(1,N (Var xx_4 Only) [A Zero]),(0,C Pi [Nat,L (<xx_2> C Set [])])], globalValues = [("finElim",L (<m> L (<mz> L (<ms> L (<n> L (<fin> N (Var 0@0 Only) [FinElim (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])])))))),("Fin",L (<n> Fin (N (Var 0@0 Only) []))),("FSucc",L (<n> L (<f> FSucc (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("FZero",L (<n> FZero (N (Var 0@0 Only) []))),("eqElim",L (<a> L (<m> L (<mr> L (<x> L (<y> L (<eq> N (Var 0@0 Only) [EqElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Eq",L (<a> L (<x> L (<y> Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []))))),("Refl",L (<a> L (<x> ERefl (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("vecElim",L (<a> L (<m> L (<mn> L (<mc> L (<k> L (<xs> N (Var 0@0 Only) [VecElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Vec",L (<a> L (<n> Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("Cons",L (<a> L (<n> L (<x> L (<xs> VCons (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))))),("Nil",L (<a> VNil (N (Var 0@0 Only) []))),("natElim",L (<m> L (<mz> L (<ms> L (<k> N (Var 0@0 Only) [NatElim (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))),("Nat",Nat),("Succ",L (<n> Succ (N (Var 0@0 Only) []))),("Zero",Zero)], globalTypes = [("finElim",C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [C Pi [Nat,L (<n> N (Var 1@0 Only) [A (Succ (N (Var 0@0 Only) [])),A (FZero (N (Var 0@0 Only) []))])],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> C Pi [N (Var 3@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 4@0 Only) [A (Succ (N (Var 2@0 Only) [])),A (FSucc (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])]),("Fin",C Pi [Nat,L (<xp> C Set [])]),("FSucc",C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> Fin (Succ (N (Var 1@0 Only) [])))])]),("FZero",C Pi [Nat,L (<n> Fin (Succ (N (Var 0@0 Only) [])))]),("eqElim",C Pi [C Set [],L (<a> C Pi [C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Pi [Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])])],L (<m> C Pi [C Pi [N (Var 1@0 Only) [],L (<x> N (Var 1@0 Only) [A (N (Var 0@0 Only) []),A (N (Var 0@0 Only) []),A (ERefl (N (Var 2@0 Only) []) (N (Var 0@0 Only) []))])],L (<xp> C Pi [N (Var 2@0 Only) [],L (<x> C Pi [N (Var 3@0 Only) [],L (<y> C Pi [Eq (N (Var 4@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<eq> N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Eq",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Set [])])])]),("Refl",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> Eq (N (Var 1@0 Only) []) (N (Var 0@0 Only) []) (N (Var 0@0 Only) []))])]),("vecElim",C Pi [C Set [],L (<a> C Pi [C Pi [Nat,L (<n> C Pi [Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [N (Var 0@0 Only) [A Zero,A (VNil (N (Var 1@0 Only) []))],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [N (Var 3@0 Only) [],L (<x> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 1@0 Only) []),L (<xs> C Pi [N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 5@0 Only) [A (Succ (N (Var 3@0 Only) [])),A (VCons (N (Var 6@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 0@0 Only) []),L (<xs> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Vec",C Pi [C Set [],L (<xp> C Pi [Nat,L (<xp> C Set [])])]),("Cons",C Pi [C Set [],L (<a> C Pi [Nat,L (<n> C Pi [N (Var 1@0 Only) [],L (<xp> C Pi [Vec (N (Var 2@0 Only) []) (N (Var 1@0 Only) []),L (<xp> Vec (N (Var 3@0 Only) []) (Succ (N (Var 2@0 Only) [])))])])])]),("Nil",C Pi [C Set [],L (<a> Vec (N (Var 0@0 Only) []) Zero)]),("natElim",C Pi [C Pi [Nat,L (<xp> C Set [])],L (<m> C Pi [N (Var 0@0 Only) [A Zero],L (<xp> C Pi [C Pi [Nat,L (<msArg> C Pi [N (Var 2@0 Only) [A (N (Var 0@0 Only) [])],L (<xp> N (Var 3@0 Only) [A (Succ (N (Var 1@0 Only) []))])])],L (<xp> C Pi [Nat,L (<n> N (Var 3@0 Only) [A (N (Var 0@0 Only) [])])])])])]),("Nat",C Set []),("Succ",C Pi [Nat,L (<xp> Nat)]),("Zero",Nat)]}
EvalHead n lookup to Nat -> Set
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 28), contents = Free_ (Global "Succ")}  
  Nat -> Set <--- L {region = SourceRegion "test.lp" (line 7, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 33), contents = Bound_ 0})}  
  S( Nat -> Set )
APP  xx_ <--- L {region = SourceRegion "test.lp" (line 7, column 25), contents = Free_ (Local 0)}  
  S( Nat -> Set ) <--- L {region = SourceRegion "test.lp" (line 7, column 27), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 28), contents = L {region = SourceRegion "test.lp" (line 7, column 28), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 33), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 33), contents = Bound_ 0})}})}  
  xx_ S( (Nat -> Set) )
Lookup ii5 i 1 as xx_4 0
  env: WholeEnv {valueEnv = [], typeEnv = [(4,N (Var xx_ Only) [A (Succ (C Pi [Nat,L (<xx_2> C Set [])]))]),(3,Nat),(2,N (Var xx_6 Only) [A (Succ Zero)]),(1,N (Var xx_4 Only) [A Zero]),(0,C Pi [Nat,L (<xx_2> C Set [])])], globalValues = [("finElim",L (<m> L (<mz> L (<ms> L (<n> L (<fin> N (Var 0@0 Only) [FinElim (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])])))))),("Fin",L (<n> Fin (N (Var 0@0 Only) []))),("FSucc",L (<n> L (<f> FSucc (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("FZero",L (<n> FZero (N (Var 0@0 Only) []))),("eqElim",L (<a> L (<m> L (<mr> L (<x> L (<y> L (<eq> N (Var 0@0 Only) [EqElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Eq",L (<a> L (<x> L (<y> Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []))))),("Refl",L (<a> L (<x> ERefl (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("vecElim",L (<a> L (<m> L (<mn> L (<mc> L (<k> L (<xs> N (Var 0@0 Only) [VecElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Vec",L (<a> L (<n> Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("Cons",L (<a> L (<n> L (<x> L (<xs> VCons (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))))),("Nil",L (<a> VNil (N (Var 0@0 Only) []))),("natElim",L (<m> L (<mz> L (<ms> L (<k> N (Var 0@0 Only) [NatElim (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))),("Nat",Nat),("Succ",L (<n> Succ (N (Var 0@0 Only) []))),("Zero",Zero)], globalTypes = [("finElim",C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [C Pi [Nat,L (<n> N (Var 1@0 Only) [A (Succ (N (Var 0@0 Only) [])),A (FZero (N (Var 0@0 Only) []))])],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> C Pi [N (Var 3@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 4@0 Only) [A (Succ (N (Var 2@0 Only) [])),A (FSucc (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])]),("Fin",C Pi [Nat,L (<xp> C Set [])]),("FSucc",C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> Fin (Succ (N (Var 1@0 Only) [])))])]),("FZero",C Pi [Nat,L (<n> Fin (Succ (N (Var 0@0 Only) [])))]),("eqElim",C Pi [C Set [],L (<a> C Pi [C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Pi [Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])])],L (<m> C Pi [C Pi [N (Var 1@0 Only) [],L (<x> N (Var 1@0 Only) [A (N (Var 0@0 Only) []),A (N (Var 0@0 Only) []),A (ERefl (N (Var 2@0 Only) []) (N (Var 0@0 Only) []))])],L (<xp> C Pi [N (Var 2@0 Only) [],L (<x> C Pi [N (Var 3@0 Only) [],L (<y> C Pi [Eq (N (Var 4@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<eq> N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Eq",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Set [])])])]),("Refl",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> Eq (N (Var 1@0 Only) []) (N (Var 0@0 Only) []) (N (Var 0@0 Only) []))])]),("vecElim",C Pi [C Set [],L (<a> C Pi [C Pi [Nat,L (<n> C Pi [Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [N (Var 0@0 Only) [A Zero,A (VNil (N (Var 1@0 Only) []))],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [N (Var 3@0 Only) [],L (<x> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 1@0 Only) []),L (<xs> C Pi [N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 5@0 Only) [A (Succ (N (Var 3@0 Only) [])),A (VCons (N (Var 6@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 0@0 Only) []),L (<xs> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Vec",C Pi [C Set [],L (<xp> C Pi [Nat,L (<xp> C Set [])])]),("Cons",C Pi [C Set [],L (<a> C Pi [Nat,L (<n> C Pi [N (Var 1@0 Only) [],L (<xp> C Pi [Vec (N (Var 2@0 Only) []) (N (Var 1@0 Only) []),L (<xp> Vec (N (Var 3@0 Only) []) (Succ (N (Var 2@0 Only) [])))])])])]),("Nil",C Pi [C Set [],L (<a> Vec (N (Var 0@0 Only) []) Zero)]),("natElim",C Pi [C Pi [Nat,L (<xp> C Set [])],L (<m> C Pi [N (Var 0@0 Only) [A Zero],L (<xp> C Pi [C Pi [Nat,L (<msArg> C Pi [N (Var 2@0 Only) [A (N (Var 0@0 Only) [])],L (<xp> N (Var 3@0 Only) [A (Succ (N (Var 1@0 Only) []))])])],L (<xp> C Pi [Nat,L (<n> N (Var 3@0 Only) [A (N (Var 0@0 Only) [])])])])])]),("Nat",C Set []),("Succ",C Pi [Nat,L (<xp> Nat)]),("Zero",Nat)]}
EvalHead n lookup to xx_4 0
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")}  
  xx_4 0 <--- L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Bound_ 1})}  
  S( xx_4 0 )
EvalHead n lookup to S( xx_4 0 )
APP  \ n . S( n ) <--- L {region = SourceRegion "test.lp" (line 7, column 42), contents = Free_ (Global "Succ")}  
  S( xx_4 0 ) <--- L {region = SourceRegion "test.lp" (line 7, column 47), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 48), contents = L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Bound_ 1})}})}  
  S( S( xx_4 0 ) )
APP  xx_ <--- L {region = SourceRegion "test.lp" (line 7, column 39), contents = Free_ (Local 0)}  
  S( S( xx_4 0 ) ) <--- L {region = SourceRegion "test.lp" (line 7, column 41), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 42), contents = L {region = SourceRegion "test.lp" (line 7, column 42), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 47), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 48), contents = L {region = SourceRegion "test.lp" (line 7, column 48), contents = Free_ (Global "Succ")} :$: L {region = SourceRegion "test.lp" (line 7, column 53), contents = Inf_ (L {region = SourceRegion "test.lp" (line 7, column 53), contents = Bound_ 1})}})}})}  
  xx_ S( S( (xx_4 0) ) )
Getting value Nat for Global "Nat"
Getting value Nat for Global "Nat"
Getting value Nat for Global "Nat"
Getting value Nat for Global "Nat"
Lookup ii1 i 0 as Nat -> Set
  env: WholeEnv {valueEnv = [], typeEnv = [(0,C Pi [Nat,L (<xx_> C Set [])])], globalValues = [("finElim",L (<m> L (<mz> L (<ms> L (<n> L (<fin> N (Var 0@0 Only) [FinElim (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])])))))),("Fin",L (<n> Fin (N (Var 0@0 Only) []))),("FSucc",L (<n> L (<f> FSucc (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("FZero",L (<n> FZero (N (Var 0@0 Only) []))),("eqElim",L (<a> L (<m> L (<mr> L (<x> L (<y> L (<eq> N (Var 0@0 Only) [EqElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Eq",L (<a> L (<x> L (<y> Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []))))),("Refl",L (<a> L (<x> ERefl (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("vecElim",L (<a> L (<m> L (<mn> L (<mc> L (<k> L (<xs> N (Var 0@0 Only) [VecElim (N (Var 5@0 Only) []) (N (Var 4@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))))),("Vec",L (<a> L (<n> Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))),("Cons",L (<a> L (<n> L (<x> L (<xs> VCons (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) [])))))),("Nil",L (<a> VNil (N (Var 0@0 Only) []))),("natElim",L (<m> L (<mz> L (<ms> L (<k> N (Var 0@0 Only) [NatElim (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) [])]))))),("Nat",Nat),("Succ",L (<n> Succ (N (Var 0@0 Only) []))),("Zero",Zero)], globalTypes = [("finElim",C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [C Pi [Nat,L (<n> N (Var 1@0 Only) [A (Succ (N (Var 0@0 Only) [])),A (FZero (N (Var 0@0 Only) []))])],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> C Pi [N (Var 3@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 4@0 Only) [A (Succ (N (Var 2@0 Only) [])),A (FSucc (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<f> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])]),("Fin",C Pi [Nat,L (<xp> C Set [])]),("FSucc",C Pi [Nat,L (<n> C Pi [Fin (N (Var 0@0 Only) []),L (<xp> Fin (Succ (N (Var 1@0 Only) [])))])]),("FZero",C Pi [Nat,L (<n> Fin (Succ (N (Var 0@0 Only) [])))]),("eqElim",C Pi [C Set [],L (<a> C Pi [C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Pi [Eq (N (Var 2@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])])],L (<m> C Pi [C Pi [N (Var 1@0 Only) [],L (<x> N (Var 1@0 Only) [A (N (Var 0@0 Only) []),A (N (Var 0@0 Only) []),A (ERefl (N (Var 2@0 Only) []) (N (Var 0@0 Only) []))])],L (<xp> C Pi [N (Var 2@0 Only) [],L (<x> C Pi [N (Var 3@0 Only) [],L (<y> C Pi [Eq (N (Var 4@0 Only) []) (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<eq> N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Eq",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> C Pi [N (Var 1@0 Only) [],L (<y> C Set [])])])]),("Refl",C Pi [C Set [],L (<a> C Pi [N (Var 0@0 Only) [],L (<x> Eq (N (Var 1@0 Only) []) (N (Var 0@0 Only) []) (N (Var 0@0 Only) []))])]),("vecElim",C Pi [C Set [],L (<a> C Pi [C Pi [Nat,L (<n> C Pi [Vec (N (Var 1@0 Only) []) (N (Var 0@0 Only) []),L (<xp> C Set [])])],L (<m> C Pi [N (Var 0@0 Only) [A Zero,A (VNil (N (Var 1@0 Only) []))],L (<xp> C Pi [C Pi [Nat,L (<n> C Pi [N (Var 3@0 Only) [],L (<x> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 1@0 Only) []),L (<xs> C Pi [N (Var 4@0 Only) [A (N (Var 2@0 Only) []),A (N (Var 0@0 Only) [])],L (<xp> N (Var 5@0 Only) [A (Succ (N (Var 3@0 Only) [])),A (VCons (N (Var 6@0 Only) []) (N (Var 3@0 Only) []) (N (Var 2@0 Only) []) (N (Var 1@0 Only) []))])])])])],L (<xp> C Pi [Nat,L (<n> C Pi [Vec (N (Var 4@0 Only) []) (N (Var 0@0 Only) []),L (<xs> N (Var 4@0 Only) [A (N (Var 1@0 Only) []),A (N (Var 0@0 Only) [])])])])])])])]),("Vec",C Pi [C Set [],L (<xp> C Pi [Nat,L (<xp> C Set [])])]),("Cons",C Pi [C Set [],L (<a> C Pi [Nat,L (<n> C Pi [N (Var 1@0 Only) [],L (<xp> C Pi [Vec (N (Var 2@0 Only) []) (N (Var 1@0 Only) []),L (<xp> Vec (N (Var 3@0 Only) []) (Succ (N (Var 2@0 Only) [])))])])])]),("Nil",C Pi [C Set [],L (<a> Vec (N (Var 0@0 Only) []) Zero)]),("natElim",C Pi [C Pi [Nat,L (<xp> C Set [])],L (<m> C Pi [N (Var 0@0 Only) [A Zero],L (<xp> C Pi [C Pi [Nat,L (<msArg> C Pi [N (Var 2@0 Only) [A (N (Var 0@0 Only) [])],L (<xp> N (Var 3@0 Only) [A (Succ (N (Var 1@0 Only) []))])])],L (<xp> C Pi [Nat,L (<n> N (Var 3@0 Only) [A (N (Var 0@0 Only) [])])])])])]),("Nat",C Set []),("Succ",C Pi [Nat,L (<xp> Nat)]),("Zero",Nat)]}
Interpreter for lambda-Pi.
Type :? for help.
lambda-pi-constraint: bad elimination of Nat -> Set by 0
